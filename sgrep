#!/bin/bash
# A highly stupid (?) version of grep, DISCLAIMER, this is a joke, I know its
# can be ineffecient as hell.  Written by skiqqy

args=( $@ )

usage ()
{
	cat << EOF
sgrep ~ A *really* stupid grep implementation.

Usage: sgrep [OPTION...] PATTERN [FILE...]
EOF
	exit "$1"
}

template ()
{
	# Lex template
	cat << EOF
%{
#include <stdio.h>
int match = 1;
%}
%%
.*REGEX.* { printf("%s\n", yytext); match = 0; }
[" "\n\t] |
.*        ;
%%
int main(int argc, char *argv[])
{
	FILE *fp = NULL;
	int i;

	if (argc >= 2) {
		for (i = 1; i < argc; i++) {
			fp = fopen(argv[i], "r");
			yyin = fp;
			yylex();
			fclose(fp);
		}
	} else {
		// Read from /dev/stdin
		yylex();
	}

	return match;
}
EOF
}

# Create the lex file for the specified regex
# Usage: comp "regex"
comp ()
{
	lex -o /tmp/sgrep.c <(template | sed -E "s|REGEX|$1|g")
	gcc -o /tmp/sgrep /tmp/sgrep.c -lfl
}

main ()
{
	# TODO: Add grep options
	while getopts "h" opt
	do
		case "$opt" in
			h)
				usage 0
				;;

			*)
				usage 1
				;;
		esac
	done

	comp "$1"

	# This is just for now bc im lazy af
	if [ "$#" -ge 2 ]
	then
		# Get args
		files=
		for ((i=1; i < "$#"; i++))
		do
			files="$files ${args["$i"]}"
		done
		/tmp/sgrep $files # Yes i want globbing
	else
		/tmp/sgrep
	fi
}

main "$@"
